{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA,mBAAmB;AACnB;AACA,uEAAuE;AACvE;AACA,0CAA0C;AAC1C;AACA,sCAAsC;AACtC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,kCAAkC;AAClC;AACA,0EAA0E;AAC1E;AACA;AACA,qFAAqF;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,6GAA6G;AAC7G,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,yDAAyD,gBAAgB,MAAM;AAC/E;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,wFAAwF;AACxF,kBAAkB,MAAM;AACxB,sDAAsD;AACtD,6EAA6E;AAC7E;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,oDAAoD;AACpD;AACA,aAAa;AACb,SAAS;AACT;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,uDAAuD;AACvD;AACA,+CAA+C;AAC/C;AACA,4CAA4C;AAC5C,qDAAqD;AACrD,cAAc;AACd,6CAA6C;AAC7C;AACA;AACA,8CAA8C;AAC9C,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACvH8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf,yBAAyB;AACzB,2BAA2B,iCAAiC,OAAO;AACnE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK,MAAM,OAAO;AACpD,yDAAyD,MAAM;AAC/D,uDAAuD,MAAM;AAC7D;AACA;AACA;AACA,iEAAiE,MAAM;AACvE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AChGpB,UAAU,uBAAuB,gBAAgB;AACd;AACD;AACY;AAC9C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,mEAAmE;AACnE;AACA,qDAAqD;AACrD,oDAAoD;AACpD;AACA,+EAA+E;AAC/E,4EAA4E;AAC5E;AACA,oDAAoD;AACpD;AACA,kCAAkC;AAClC;AACA;AACA,wCAAwC;AACxC,gBAAgB;AAChB;AACA,oDAAoD;AACpD;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA,YAAY,4DAAQ;AACpB;AACA,4BAA4B;AAC5B,mCAAmC;AACnC;AACA,8BAA8B;AAC9B,wCAAwC;AACxC,aAAa;AACb;AACA,aAAa;AACb,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU,WAAW;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACxHpB,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4DAA4D;AAC5D;AACA;AACA,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;AC/DpB,kBAAkB,qFAAqF,GAAG;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,mBAAmB;AACnB;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,MAAM;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA,wDAAwD;AACxD,uCAAuC;AACvC;AACA;AACA,4CAA4C;AAC5C;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qDAAqD;AACrD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,+BAA+B;AAC/B;AACA,kBAAkB,mBAAmB,SAAS;AAC9C,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,mCAAmC;AACnC;AACA,+BAA+B;AAC/B,uBAAuB;AACvB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,wBAAwB;AACxB,UAAU;AACV,iDAAiD,mRAAmR,OAAO;AAC3U;AACA;AACA,qDAAqD,OAAO,MAAM;AAClE;AACA,qCAAqC;AACrC;AACA,UAAU;AACV;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C,UAAU;AACV;AACA;AACA;AACA,uDAAuD;AACvD,wCAAwC;AACxC,KAAK;AACL;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,UAAU;AACV,8CAA8C;AAC9C;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA,mEAAmE;AACnE;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,2CAA2C,MAAM;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC;AACpC,0BAA0B;AAC1B;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,yCAAyC,MAAM;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AClMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACvCnB,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC5DpB,wCAAwC;AACxC,mCAAmC;AACnC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qCAAqC,yGAAyG,uBAAuB;AACrK;AACA;AACA,kBAAkB;AAClB,0CAA0C,IAAI,YAAY,WAAW;AACrE;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,YAAY,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACkB;;;;;;;UCrClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNoC;AACC;AACA;AACA;AACD;AACC;AACC;AACI;AAC1C;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP,CAAC,G","sources":["webpack://task1/./js/modules/calc.js","webpack://task1/./js/modules/cards.js","webpack://task1/./js/modules/forms.js","webpack://task1/./js/modules/modal.js","webpack://task1/./js/modules/slider.js","webpack://task1/./js/modules/tabs.js","webpack://task1/./js/modules/timer.js","webpack://task1/./js/services/services.js","webpack://task1/webpack/bootstrap","webpack://task1/webpack/runtime/define property getters","webpack://task1/webpack/runtime/hasOwnProperty shorthand","webpack://task1/webpack/runtime/make namespace object","webpack://task1/./js/script.js"],"sourcesContent":["function calc () { //Calculator\r\n\r\n    const result = document.querySelector('.calculating__result span');//куда будет записываться результат\r\n    \r\n    let sex, height, weight, age, ratio;  //будем использовать их в формуле функции ниже\r\n    \r\n    if (localStorage.getItem('sex')) {//дефолтные значения - если в localStorage есть информация то эти значения помещаем в переменные sex или ratio. А если нету - то мы установим ее по умолчанию\r\n        sex = localStorage.getItem('sex')\r\n    }   else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female')\r\n    }    \r\n    \r\n    if (localStorage.getItem('ratio')) {//дефолтные значения - если в localStorage есть информация то эти значения помещаем в переменные sex или ratio. А если нету - то мы установим ее по умолчанию\r\n        ratio = localStorage.getItem('ratio')\r\n    }   else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }  \r\n    \r\n    function initLocalSettings(selector, activeClass) {//функция инициализирует калькулятор, а именно устанавливает классы Активности в нужные нам блоки(1 раз) и больще не будет работать\r\n        const elements = document.querySelectorAll(selector);\r\n        \r\n        elements.forEach(elem => {//перебираем блоки и когда 'id' или'data-ratio' совпадет со значением содержащимся в localStorage то эту элементу(кнопке) мы назначим класс активности\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {//тут пол муж или жен\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // тут будет число\r\n                elem.classList.add(activeClass);\r\n            }\r\n        })\r\n    }\r\n    \r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n     \r\n    \r\n    function calcTotal () {//общая ф-ция, которая будет заниматься подсчетами с формулой. Будет запускаться каждый раз когда пользователь кликнет или введет что то в input\r\n        if (!sex || !height || !weight || !age || !ratio) {//проверка на false\r\n            result.textContent = '______';\r\n            return;\r\n        }\r\n    \r\n        if (sex === 'female') {//формула если выбрана female\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);//округляем\r\n        } else {//формула если выбрана male\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n     \r\n        }\r\n    };\r\n    \r\n    calcTotal ()//вызываем сразу, и увидем пустую строчку в '______';\r\n    \r\n    function getStaticInformation(selector, activeClass) {//функция для получения значений с элементов (div) страницы\r\n        // const elements = document.querySelectorAll(`${parentSelector} div`);//получаем элементы внутри родителя, что навесить делегирование на родительский элемент и отслеживать клики - НО В ДАННОМ СЛУЧАЕ ОН НЕ ПРИМЕНИМ, ПОЭТОМУ сразу навещиваем на сами элементы (так как динамически создавать и добавлять Кнопки или Элементы внутрь калькулятора не будем потому и используем навещивание сразу на элементы)  \r\n        const elements = document.querySelectorAll(selector)//update: будем работать без делегирования событий \r\n    \r\n        elements.forEach(elem => {     \r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {//условие если есть такой атрибут у объекта события, то мы устанавливаем переменной ratio ее значение и берем вытаскиваем его у e.target.getAttribute('data-ratio') - тут будет число просто\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));//записываем в localStorage значение ratio\r\n                } else {//в этом случае работает с полом и получаем уникальный идентификатор (мужчина или женщина)\r\n                    sex = e.target.getAttribute('id');//получаем sex - 'female' или'male'\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));//записываем в localStorage значение sex\r\n                }\r\n                console.log(ratio, sex)\r\n        \r\n                elements.forEach(elem => elem.classList.remove(activeClass));//работаем с классами активности, убираем сначала у всех\r\n        \r\n                e.target.classList.add(activeClass);//объекту события(то куда кликнули) назначаем класс Активности\r\n                calcTotal() //должна вызываться каждый раз, когда происходит какое то изменение на странице(ввел, удалил, кликнул - все пересчитывается)\r\n            })\r\n        })\r\n    \r\n        // document.querySelector(parentSelector).addEventListener('click', (e) => { навесим делегирование на родительский элемент и отслеживать клики\r\n        //     if (e.target.getAttribute('data-ratio')) {\r\n        //         ratio = +e.target.getAttribute('data-ratio');\r\n      \r\n    }\r\n    \r\n    getStaticInformation('#gender div', 'calculating__choose-item_active')\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active')//добавляем div к селектору, ведь мы обращаемся к блокам внутри селектора\r\n    \r\n    function getDynamicInformation(selector) {//функция для получения значений с элементов (input) страницы\r\n        const input = document.querySelector(selector);//получаем input с которым будем работать\r\n    \r\n        input.addEventListener('input', () => {//навещиваем обработчик событий, чтоб отслеживать, что пользователь вводит каждый раз и автоматически изменять и запускать calcTotal() с новыми данными\r\n            \r\n            if (input.value.match(/\\D/g)) { //если будет введено НЕЧИСЛО\r\n                input.style.border = '1px solid red';// то это ошибка будет красная обводка\r\n            } else {\r\n                input.style.border = 'none'; // bkb ''\r\n            }\r\n    \r\n            switch(input.getAttribute('id')) {// в input.getAttribute('id') будет одно из значений индентификатора (height, weight и возраст)\r\n                case 'height': ///соответсвенно если будет рост, то значение через +input.value; запишеться в переменную height и так далее.\r\n                    height = +input.value;\r\n                    break;\r\n    \r\n                case 'weight': //проверка на строку\r\n                    weight = +input.value;\r\n                    break;\r\n    \r\n                case 'age': //проверка на строку\r\n                    age = +input.value;\r\n                    break;        \r\n            }\r\n            calcTotal() //должна вызываться каждый раз внутри input.addEventListener, когда происходит какое то изменение на странице(ввел, удалил, кликнул - все пересчитывается)\r\n        }); \r\n        \r\n    }  \r\n    \r\n    getDynamicInformation('#height')//передаем три раза сеелктор input\r\n    getDynamicInformation('#weight')\r\n    getDynamicInformation('#age')\r\n}\r\n\r\nexport default calc;","import {getResource} from \"../services/services\";\r\n\r\nfunction cards() { \r\n    //Using Class for cards\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; // тут удет массив\r\n            this.parent = document.querySelector(parentSelector)\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n        \r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n    \r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item'; //тут пустой массив и мы его перезаписываем, то есть сразу записываем в свойство, у нас будет дефолтный класс\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            };\r\n            \r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\"> \r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n    \r\n            this.parent.append(element);\r\n        }\r\n    }\r\n    \r\n\r\n    getResource('http://localhost:3000/menu') //запрос уже ушел и нам нужно его обработать при помощи .then()\r\n        .then((data) =>{ //тут нам с сервера возвращается массив(внутри которого 3 объекта) который можно перебрать\r\n            data.forEach(({img, altimg, title, descr, price}) => { //для удобства каждый элемент массива (объекты) - мы подвергаем деструктуризации(это когда мы из объекта вытаскиваем отдельные свойства(ключ и значение) в качестве отдельной переменной)\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render()\r\n            })\r\n        })\r\n    \r\n    // axios.get('http://localhost:3000/menu') //Библиотека, которая выполняет тоже самое, что мы написали в функции const getResource, и заменяет ее действия, методы, свойства и тд, а такде вызов, 2 в 1.\r\n    //         .then((data) =>{ \r\n    //             data.data.forEach(({img, altimg, title, descr, price}) => { \r\n    //                 new MenuCard(img, altimg, title, descr, price, '.menu .container').render()\r\n    //             })\r\n    //         })\r\n    \r\n    // getResource('http://localhost:3000/menu') // alternative version of - not using Classes\r\n        //     .then(data => createCard(data));\r\n    \r\n        // function createCard(data) {\r\n        //     data.forEach(({img, altimg, title, descr, price}) => {\r\n        //         const element = document.createElement('div');\r\n    \r\n        //         element.classList.add(\"menu__item\");\r\n    \r\n        //         element.innerHTML = `\r\n        //             <img src=${img} alt=${altimg}>\r\n        //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n        //             <div class=\"menu__item-descr\">${descr}</div>\r\n        //             <div class=\"menu__item-divider\"></div>\r\n        //             <div class=\"menu__item-price\">\r\n        //                 <div class=\"menu__item-cost\">Цена:</div>\r\n        //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n        //             </div>\r\n        //         `;\r\n        //         document.querySelector(\".menu .container\").append(element);\r\n        //     });\r\n        // }\r\n    \r\n    //const div = new MenuCard();\r\n    //div.render();\r\n    // new MenuCard(  \r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     'vegy',\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     '.menu .container',\r\n    // ).render();\r\n}\r\n\r\nexport default cards;","//import {openModal, closeModal} from \"./modal\"; //analog below\r\nimport {closeModal} from './modal';\r\nimport {openModal} from './modal'; \r\nimport {postData} from '../services/services';\r\nfunction forms (formSelector, modalTimerId) { //Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector)\r\n    \r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Thanks. We will contact you soon',\r\n        failure: 'Something wrong'\r\n    }\r\n    \r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    }) //берем нащи формы (form) и под каждую подвязываем функцию postData \r\n    \r\n    \r\n    function bindPostData(form) { //\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n    \r\n            //const statusMessage = document.createElement('div'); \r\n            //statusMessage.textContent = message.loading; \r\n            const statusMessage = document.createElement('img');       \r\n            statusMessage.src = message.loading \r\n            statusMessage.style.cssText = ` \r\n                display: block; \r\n                margin: 0 auto; \r\n            `\r\n            //form.append(statusMessage);  вмещает элемент прямо внутри формы, неудобно если верстка на флексах\r\n            form.insertAdjacentElement('afterend', statusMessage); //более гибкий чем form.append, элемент будет добавляться после формы, удобно при флексах и не сплющивает(сжимает) форму\r\n            \r\n            // const request = new XMLHttpRequest(); заменяем на технологию FETCH\r\n            // request.open('POST', 'server.php');  заменяем на технологию FETCH\r\n    \r\n            //request.setRequestHeader('Content-type', 'multipart/form-data'); в обычном формате заголовки не нужны когда используем связку XMLHttpRequest и FormData - он установится автоматически\r\n            //request.setRequestHeader('Content-type', 'application/json'); в формате JSON заголовки нужны в таком виде, ныне используется FETCH, смотри выше\r\n           \r\n            // const formData = new FormData(form); //данные которые заполнил пользователь в form&input.value сможем получить в js и отправить на сервер в виде объекта, также есть ключ значение\r\n    \r\n            // const object = {}; //для того чтобы отправить JSON запрос, создаем пустой объект, в который мы затем при помощи перебора поместим данные которые есть в formData\r\n    \r\n            // formData.forEach(function(key, value) {\r\n            //     object[key] = value; // на основании данных которые есть в formData мы сформируем объект object при помощи перебора\r\n            // });\r\n    \r\n            // const json = JSON.stringify(object); //далее обычный объект object превращаем в формат JSON, то есть трансформация new FormData формата в JSON формат \r\n            \r\n            // fetch('server.php', {\r\n            //     method: 'POST',\r\n            //     headers: { //заголовки нужны когда отправляем JSON формате\r\n            //         'Content-type': 'application/json'\r\n            //     },\r\n            //     body: json //fetch возвращает нам Промис => data, который мы затем обрабатываем в .then()\r\n            // })\r\n            \r\n    \r\n            const formData = new FormData(form);\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); // formData.entries() - берет formData и превращает в массив массивов для того чтоы могли нормально работать с ней.\r\n            //Затем Object.fromEntries(formData.entries()) превращает массив массивов в классический обьект, а затем этот классический обьект превращаем в JSON для отправки на сервер\r\n    \r\n            postData(' http://localhost:3000/requests', json)//функцию импортировали из файла '../services/services'\r\n            // .then(data => data.text()) //модифицируем данные чтобы мы могли их получить\r\n            .then(data => { //data это те данные, которые нам возвращаются из Промиса, то есть которые нам вернул сервер\r\n                console.log(data); // request.response === data ** уточнение - с сервера возвращается data но не JSON\r\n                showThanksModal(message.success);\r\n                form.reset(); //очищаем форму\r\n                statusMessage.remove(); //удаляем спиннер\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset(); //очищаем форму, выполняется всегда независимо как закончился запрос\r\n            })\r\n    \r\n            //request.send(json);\r\n            // request.send(formData);\r\n    \r\n            // request.addEventListener('load', () => {\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         showThanksModal(message.success);\r\n            //         form.reset();\r\n            //         statusMessage.remove();\r\n            //     } else {\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // })\r\n        })\r\n    }\r\n    \r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n    \r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTimerId);//нужен для нижней секции, чтоб появилось подложка\r\n        //передаем (параметр) селектор модалки которую будем закрывать(в начале модуля мы импортировали функции)\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');//передаем (параметр) селектор модалки которую будем закрывать(в начале модуля мы импортировали функции)\r\n        }, 6000);\r\n    }\r\n    \r\n    // fetch('http://localhost:3000/menu') //обращаемся к db.json same as (http://localhost:3000/menu) откуда будет возвращаться промис \r\n    //     .then(data => data.json()) //Берем ответ от сервера (data) и превращаем в обычный \r\n    //     .then(res => console.log(res)) // и далее берем тот результат и выводим в консоль\r\n}\r\n\r\nexport default forms;","function openModal (modalSelector, modalTimerId) {//Далее передаем этот селектор во всех случаях когда будем вызывать эту функцию\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    console.log(modalTimerId)\r\n    if (modalTimerId) {//if parameter (actually)exists or given then clear\r\n         clearInterval(modalTimerId)//если пользователь сам откроет модалку, то мы очистим и больше не показываем его\r\n    }\r\n   \r\n    //window.removeEventListener('scroll', showModalByScroll);\r\n };\r\n      \r\nfunction closeModal (modalSelector) {\r\n    const modal = document.querySelector(modalSelector);//аналогично как и с openModal передаем селектор везде где будем вызывать\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n   // modal.classList.remove('hide'); \r\n    document.body.style.overflow = '';\r\n} //эти функции будут использованы в других модулях, а потому экспортируем\r\n\r\nfunction modal (triggerSelector, modalSelector, modalTimerId) { \r\n\r\n    //Modal window\r\n    \r\n    const modalTrigger  = document.querySelectorAll(triggerSelector),\r\n          //modalCloseBtn  = document.querySelector('[data-close]'); больше не нужно, так как на новых динамических элементах не будут работать обработчики события, повесим делегирование событий\r\n          modal = document.querySelector(modalSelector); \r\n\r\n         \r\n    modalTrigger.forEach((btn) => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId))\r\n    });\r\n    \r\n    //modalCloseBtn.addEventListener('click', closeModal);  на создаваемых динамически новых элементах не будут работать обработчики события, повесим делегирование событий\r\n    \r\n    modal.addEventListener('click', (e) => { \r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') { // заменили обработчик modalCloseBtn на делегирование событий по атрибуту ('data-close') == '' в modal, будет работать и на новых эелементах        \r\n            closeModal(modalSelector);\r\n        }\r\n    });  \r\n    \r\n    document.addEventListener('keydown', (e) => {\r\n        if(e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    })\r\n    \r\n    \r\n    function showModalByScroll () {\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        } \r\n    }\r\n    \r\n    window.addEventListener('scroll', showModalByScroll);\r\n};\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider ({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {//деструктизирование объекта\r\n    //Slider \r\n\r\n    const slider = document.querySelector(container),//'.offer__slider' получаем слайдер, так нужно установить ему position = 'relative'.\r\n          slides = document.querySelectorAll(slide),//'.offer__slide' \r\n          next = document.querySelector(nextArrow),//'.offer__slider-next'\r\n          prev = document.querySelector(prevArrow),//'.offer__slider-prev'\r\n          total = document.querySelector(totalCounter),//'#total'\r\n          current = document.querySelector(currentCounter),//'#current'\r\n          slidesWrapper = document.querySelector(wrapper), //'.offer__slider-wrapper' главная обертка для слайдов - чтоы видеть только текущий слайд надо сделать свойство overflow = 'hidden' -->\r\n          slidesField = document.querySelector(field),//'.offer__slider-inner' Обертка-поле с нашими слайдами - тут будут размещены все слайды(4),для этого сделаем его ширину - 400% от его родителя offer__slider-wrapper. Слайды мы будем передвигать по отношению к offer__slider-wrapper при помощи свойства transform = `translateX, который мы применим к __slider-inner\r\n          width = window.getComputedStyle(slidesWrapper).width; //slidesWrapper window.getComputedStyle(slidesWrapper)тут будет object, a .width => значение *650px*\r\n    let index = 1;\r\n    let offset = 0;//ориентир, чтоб мы четко понимали сколько мы отступили вправо/влево при помощи transform\r\n    \r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${index}`;\r\n    } else { \r\n        total.textContent = slides.length; \r\n        current.textContent = index;\r\n    }\r\n    \r\n    slidesField.style.width = 100 * slides.length + '%';//устанавливаем для обертки-поля ширину, который будет содержать все слайды (400% от родителя(slidesWrapper) )\r\n    slidesField.style.display = 'flex';//слайды встанут в ряд\r\n    slidesField.style.transition = '1.4s all';\r\n    \r\n    slidesWrapper.style.overflow = 'hidden';//будем видеть только 1 слайд при смещении slidesField\r\n    \r\n    slides.forEach(item => item.style.width = width); //Перебираем слайды и устанавливаем всем одинаковую ширину(переменная width со значением *650px*), чтобы они поместились в поле-обертку slidesField \r\n    \r\n    slider.style.position = 'relative'//для того чтобы у indicators смогли установить position: absolute;\r\n    \r\n    const indicators = document.createElement('ol'), //будет ol и внутри него li\r\n          dots = []; //создали массив, чтоб в него запушить точки слайдера(внизу смотри)\r\n    indicators.classList.add('carousel-indicators'); //создаем обертку для точек \r\n    indicators.classList.add('carousel-indicators'); //создаем обертку для точек \r\n    indicators.style.cssText = ` \r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0; \r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `; //задаем стили\r\n    slider.append(indicators); //помещаем обертку прямо во внтурь слайдера\r\n    \r\n    for (let i=0; i < slides.length; i +=1) { //иницилиазируем итератор для создания точек для слайда, их будет 4 \r\n        const dot = document.createElement('li');//будет создаватся на каждой итерации\r\n        dot.setAttribute('data-slide-to', i + 1)//устанавливаем аттрибут для каждой точки, который будет говорить первая точка идет первому слайду и так далее, нумерация будет с 1 ( таккак 0+1=1)\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5; \r\n            transition: opacity .6s ease;\r\n        `; //opacity: .5 - по умолчанию у всех цвет точек будет блеклым\r\n        if (i==0) {\r\n            dot.style.opacity = 1; //у первой точки будет класс активным \r\n        }\r\n        indicators.append(dot);//аппендим, выходит вложенность slider/indicators/dot  \r\n        dots.push(dot);//пушим точки слайдера в массив, чтоб потом перебрать через forEach внутри обработчиков событий *next* и *prev*\r\n    }\r\n    \r\n    function deleteNotDigits(str) { //примем строку и удаляем буквы = 500рх будет 500\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n    \r\n    //deleteNot = (str) => +str.replace(/\\D/g, '');\r\n    \r\n    next.addEventListener('click', () => {\r\n        if (offset == (deleteNotDigits(width) * (slides.length - 1))) {  //в width храниться 650px, потому сначала работаем как со строкой отрезаем *px* через width.slice(0, width.length - 2), потом превращаем в числовой тип данных, в итоге будет 650*3=1950\r\n             //Analog (+width.slice(0, width.length - 2) * (slides.length - 1)))    \r\n            offset = 0; //пограничный вариант самый крайний(правый), возвращаем в начало\r\n        } else {\r\n            offset += +width.replace(/\\D/g, ''); //если не последний слайд, то мы добавляем смещение - к offset добавляется ширина еще одного слайда (650) и слайд будет смещаться на определенную величину, тут будет числовое значение - 650 или 1300 или 1950, которое мы добавим в slidesField.style.transform = `translateX(-${offset}px)`\r\n        }\r\n    \r\n        slidesField.style.transform = `translateX(-${offset}px)`; //смещаем поле-обертку, которая содержит все слайды, вправо/влево (если влево то отрицательное, если вправо то положительное значение)\r\n    \r\n        if (index == slides.length) {//если индекс будет равен количеству слайдов, значит мы дошли до конца слайдера и необходимо перенестись в 1 слайд  index = 1\r\n            index = 1;\r\n        } else {\r\n            index++ //если не дошли до конца, увеличиваем индекс каждый раз на 1 единицу*Примечание указал сначала index +=1 и это выдало ошибку(происходило слияние номера слайда - 02 затем 021 затем 0211 и так далее) потом при переключении с точек слайдера на стрелки слайдера\r\n        }\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${index}`;\r\n        } else { \r\n            current.textContent = index;\r\n        }\r\n    \r\n        dots.forEach(dot => dot.style.opacity = '.5'); //при клике берем массив и у каждой точки слайдера ставим прозрачность 50%\r\n        dots[index-1].style.opacity = 1;//а другой операцией назначаем активной точке прозрачность 1\r\n    })\r\n    \r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {// пограничный вариант когда мы на 1 слайде и нажимаем назад - должны переместиться вконец\r\n            offset = (deleteNotDigits(width) * (slides.length - 1))\r\n    \r\n        } else {\r\n            offset -= deleteNotDigits(width); //из переменной offset отнимаем каждый раз ширину слайда на которую мы смещаемся\r\n        }\r\n    \r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n        \r\n        if (index == 1) {\r\n            index = slides.length;\r\n        } else {\r\n            index -=1 //стоит ли сделать как и в случаем с index++\r\n        }\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${index}`;\r\n        } else { \r\n            current.textContent = index;\r\n        }\r\n    \r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[index-1].style.opacity = 1;\r\n    })\r\n    \r\n    dots.forEach(dot => {//перебираем и добавляем функциональность, что при клике перемещаться к опред-ному слайду, также нужно учесть offset и current.textContent и index \r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');//тут атрибут который мы установили ранее каждой точке / тут числовой тип данных (от 1 до 4)\r\n            index = slideTo;\r\n            offset = deleteNotDigits(width) * (index - 1);\r\n    \r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n            if (slides.length < 10) {\r\n                current.textContent =  `0${index}`;\r\n            } else {\r\n                current.textContent =  index;\r\n            }\r\n    \r\n            dots.forEach(dot => dot.style.opacity = \".5\");\r\n            dots[index-1].style.opacity = 1;\r\n        });\r\n    });\r\n    \r\n    \r\n    \r\n    // showSlides(index)\r\n    \r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else { \r\n    //     total.textContent = slides.length;\r\n    // }\r\n    \r\n    // function showSlides(i) {\r\n    //     if (i > slides.length) { //slides.length - 1\r\n    //         index = 1; // 0\r\n    //     }\r\n    //     if (i < 1) {\r\n    //         index = slides.length;  //slides.length - 1\r\n    //     }\r\n        \r\n    //     slides.forEach(slide => slide.style.display = 'none')\r\n    \r\n    //     slides[index-1].style.display = 'block'; // index\r\n    \r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${index}`;\r\n    //     } else { \r\n    //         current.textContent = index;\r\n    //     }\r\n    // };\r\n    \r\n    // function plusSlider (i) {\r\n    //     showSlides(index += i); //сюда может приходит или +1 или -1, то есть мы или увеличиваем или уменьшаем индекс\r\n    // }\r\n    \r\n    // next.addEventListener('click', () => {\r\n    //     plusSlider (1);\r\n    // })\r\n    \r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlider (-1);\r\n    // })\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n\tlet tabs = document.querySelectorAll(tabsSelector),\r\n\t\ttabsContent = document.querySelectorAll(tabsContentSelector),\r\n\t\ttabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\tfunction hideTabContent() {\r\n        \r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n\t}\r\n\r\n\tfunction showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n    \r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n\ttabsParent.addEventListener('click', function(event) {\r\n        const target = event.target;\r\n\t\tif(target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n\t\t}\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer (id, deadline) { //Timer\r\n\r\n    //const deadline = '2023-12-31';\r\n    \r\n    function getTimeRemaining (endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()), //or new Date()\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)), // t / 1000 / 60 / 60\r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            seconds = Math.floor((t / 1000) % 60);\r\n    \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    \r\n    function getZero (num) {\r\n        if (num >= 0 && num <10) {\r\n            return `0${num}`\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n    \r\n    function setClock(selector, endtime) {\r\n        \r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector(\"#days\"),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),//?\r\n              \r\n              timeInterval = setInterval(updateClock, 1000);\r\n    \r\n        \r\n        updateClock();     \r\n        //interval = setInterval(updateClock, 1000) \r\n    \r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n     \r\n            days.innerHTML  = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n            \r\n            if (t.total <=0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    setClock(id, deadline);// id = '.timer' - selector\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => { // function expression - Method POST\r\n    const res = await fetch(url, { //res is a promise so we can use .json() and return it\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    })\r\n    return await res.json(); //промис из fetch обработаем методом json()  и вернем из функции postData  \r\n           // res.json() это тоже промис, мы возвращаем из функции промис\r\n           // и дальше мы его сможем через цепочку .then() обработать как нам надо\r\n};\r\n\r\nconst getResource = async (url) => { // function expression Method GET - мы ничего не отправляем на сервер, только получаем, поэтому объекта {method, headers, body} с настройками  не будет!\r\n    const res = await fetch(url)\r\n\r\n    if (!res.ok) {// 2 свойства которые есть у промиса, который возвращается из fetch: .ok, status (200, 404, 500 and etc)\r\n       throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json(); //промис из fetch обработаем методом json()  и вернем из функции postData  \r\n           // res.json() это тоже промис, мы возвращаем из функции промис\r\n           // Мы делаем запрос, дожидаемся его окончания и трансформируем все эти данные в нормальный джаваскриптовый объект при помощи res.json()\r\n           // и дальше мы его сможем через цепочку .then() обработать как нам надо\r\n};\r\n\r\n// async function getResource(url) {\r\n//     let res = await fetch(url);\r\n\r\n//     if (!res.ok) {\r\n//         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n//     }\r\n\r\n//     return await res.json();\r\n// }\r\n\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs   from './modules/tabs';\r\nimport modal  from './modules/modal';\r\nimport timer  from './modules/timer';\r\nimport cards  from './modules/cards';\r\nimport calc   from './modules/calc';\r\nimport forms  from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport {openModal} from './modules/modal';\r\n        \r\nwindow.addEventListener('DOMContentLoaded', function() {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000); \r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2023-12-31');\r\n    cards();\r\n    calc();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner' \r\n    });//передаем сюда объект с настройками(аргументами), которые затем будут деструктизироваться в файле slider.js \r\n}); "],"names":[],"sourceRoot":""}